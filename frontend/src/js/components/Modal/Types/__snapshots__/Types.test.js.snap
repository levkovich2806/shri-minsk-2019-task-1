// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Types Should match snapshot Types 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Types
    type="image"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="types__title"
        >
          Тип: 
        </div>,
        <div
          className="types__item"
        >
          <input
            checked={false}
            id="text"
            name="type"
            type="radio"
            value="text"
          />
          <label
            htmlFor="text"
          >
            Текст
          </label>
        </div>,
        <div
          className="types__item"
        >
          <input
            checked={true}
            id="image"
            name="type"
            type="radio"
            value="image"
          />
          <label
            htmlFor="image"
          >
            Изображение
          </label>
        </div>,
        <div
          className="types__item"
        >
          <input
            checked={false}
            id="list"
            name="type"
            type="radio"
            value="list"
          />
          <label
            htmlFor="list"
          >
            Список
          </label>
        </div>,
      ],
      "className": "types",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Тип: ",
          "className": "types__title",
        },
        "ref": null,
        "rendered": "Тип: ",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              checked={false}
              id="text"
              name="type"
              type="radio"
              value="text"
            />,
            <label
              htmlFor="text"
            >
              Текст
            </label>,
          ],
          "className": "types__item",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "checked": false,
              "id": "text",
              "name": "type",
              "onChange": undefined,
              "type": "radio",
              "value": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Текст",
              "htmlFor": "text",
            },
            "ref": null,
            "rendered": "Текст",
            "type": "label",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              checked={true}
              id="image"
              name="type"
              type="radio"
              value="image"
            />,
            <label
              htmlFor="image"
            >
              Изображение
            </label>,
          ],
          "className": "types__item",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "checked": true,
              "id": "image",
              "name": "type",
              "onChange": undefined,
              "type": "radio",
              "value": "image",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Изображение",
              "htmlFor": "image",
            },
            "ref": null,
            "rendered": "Изображение",
            "type": "label",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              checked={false}
              id="list"
              name="type"
              type="radio"
              value="list"
            />,
            <label
              htmlFor="list"
            >
              Список
            </label>,
          ],
          "className": "types__item",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "checked": false,
              "id": "list",
              "name": "type",
              "onChange": undefined,
              "type": "radio",
              "value": "list",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Список",
              "htmlFor": "list",
            },
            "ref": null,
            "rendered": "Список",
            "type": "label",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="types__title"
          >
            Тип: 
          </div>,
          <div
            className="types__item"
          >
            <input
              checked={false}
              id="text"
              name="type"
              type="radio"
              value="text"
            />
            <label
              htmlFor="text"
            >
              Текст
            </label>
          </div>,
          <div
            className="types__item"
          >
            <input
              checked={true}
              id="image"
              name="type"
              type="radio"
              value="image"
            />
            <label
              htmlFor="image"
            >
              Изображение
            </label>
          </div>,
          <div
            className="types__item"
          >
            <input
              checked={false}
              id="list"
              name="type"
              type="radio"
              value="list"
            />
            <label
              htmlFor="list"
            >
              Список
            </label>
          </div>,
        ],
        "className": "types",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Тип: ",
            "className": "types__title",
          },
          "ref": null,
          "rendered": "Тип: ",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                checked={false}
                id="text"
                name="type"
                type="radio"
                value="text"
              />,
              <label
                htmlFor="text"
              >
                Текст
              </label>,
            ],
            "className": "types__item",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "checked": false,
                "id": "text",
                "name": "type",
                "onChange": undefined,
                "type": "radio",
                "value": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Текст",
                "htmlFor": "text",
              },
              "ref": null,
              "rendered": "Текст",
              "type": "label",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                checked={true}
                id="image"
                name="type"
                type="radio"
                value="image"
              />,
              <label
                htmlFor="image"
              >
                Изображение
              </label>,
            ],
            "className": "types__item",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "checked": true,
                "id": "image",
                "name": "type",
                "onChange": undefined,
                "type": "radio",
                "value": "image",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Изображение",
                "htmlFor": "image",
              },
              "ref": null,
              "rendered": "Изображение",
              "type": "label",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                checked={false}
                id="list"
                name="type"
                type="radio"
                value="list"
              />,
              <label
                htmlFor="list"
              >
                Список
              </label>,
            ],
            "className": "types__item",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "checked": false,
                "id": "list",
                "name": "type",
                "onChange": undefined,
                "type": "radio",
                "value": "list",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Список",
                "htmlFor": "list",
              },
              "ref": null,
              "rendered": "Список",
              "type": "label",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
